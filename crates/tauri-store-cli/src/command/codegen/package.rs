use super::transform::{prepend_autogenerated, remove_nocheck};
use super::{Generator, OutputContext};
use crate::path::{assets_plugin_ts_dir, package_commands_dir};
use anyhow::Result;
use colored::Colorize;
use std::path::Path;
use std::time::Instant;

pub(super) fn generate() -> Result<()> {
  let start = Instant::now();
  println!("{}", "generating package code".cyan());

  let assets = assets_plugin_ts_dir();
  generate_commands(&assets)?;

  let duration = start.elapsed();
  println!("{}", format!("done in {duration:?}").green());

  Ok(())
}

fn generate_commands(assets: &Path) -> Result<()> {
  let input = assets.join("commands.ts");
  let output = |ctx: OutputContext<'_>| {
    let dir = package_commands_dir(ctx.target);
    dir.join("autogenerated.ts")
  };

  Generator::builder(&input, &output)
    .transform(&[&remove_nocheck, &prepend_autogenerated])
    .build()
    .generate()
}
