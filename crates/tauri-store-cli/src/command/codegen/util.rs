pub mod consts {
  pub const PLUGIN_FULL_NAME: &str = "__PLUGIN_FULL_NAME__";

  pub const PLUGIN_NAME: &str = "__PLUGIN_NAME__";
  pub const PASCAL_PLUGIN_NAME: &str = "__PASCAL_PLUGIN_NAME__";
  pub const SNAKE_PLUGIN_NAME: &str = "__SNAKE_PLUGIN_NAME__";

  pub const IMPORT_SOURCE: &str = "__IMPORT_SOURCE__";
  pub const STORE_COLLECTION: &str = "__STORE_COLLECTION__";
}

pub mod replace {
  use crate::plugin::Plugin;
  use convert_case::{Case, Casing};

  pub fn store_collection(target: Plugin, case: Case) -> String {
    let collection = if let Plugin::Store = target {
      "store-collection"
    } else {
      target.name()
    };

    collection.to_case(case)
  }
}

pub mod transform {
  const AUTOGENERATED_WARNING: &str = "
// This file was autogenerated and should not be edited manually.
// Check the `codegen` command in the `tauri-store-cli` crate.\n
";

  pub fn prepend_autogenerated(contents: &mut String) {
    let warning = AUTOGENERATED_WARNING.trim_start();
    contents.insert_str(0, warning);
  }

  pub fn remove_nocheck(contents: &mut String) {
    contents
      .replace("// @ts-nocheck", "")
      .trim_start()
      .clone_into(contents);
  }
}
